@model CryptoNewsApp.Web.Areas.Admin.Models.Vms.CategoryIndexVm
@using CryptoNewsApp.Core.Enums


@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@* Başarı mesajı *@
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* Hata mesajı *@
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Category Management</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
            <i class="fas fa-plus me-2"></i>Add New Category
        </button>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form class="row g-3">
            <div class="col-md-4">
                <label for="search" class="form-label">Search</label>
                <input type="text" class="form-control" id="search" placeholder="Search by name or description">
            </div>
            <div class="col-md-3">
                <label for="status" class="form-label">Status</label>
                <select name="CreateCategory.Status" class="form-select" id="status">
                    <option value="">All Status</option>
                    @foreach (var item in Model.CreateCategory.Statuses)
                    {
                        <option value="@item.Value">@item.Text</option>

                    }
                   
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">Filter</button>
            </div>
        </form>
    </div>
</div>

<!-- Categories Table -->
<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" class="form-check-input" id="selectAll">
                        </th>
                        <th>Name</th>
                        <th>Slug</th>
                        <th>Description</th>
                        @*  <th>Articles</th> *@
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Categories)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="form-check-input">
                            </td>
                            <td>@item.Name</td>
                            <td>@item.Slug</td>
                            <td>@item.Description</td>
                            @* <td>125</td> *@
                            <td><span class="badge bg-success">@item.Status</span></td>
                            <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-sm btn-outline-primary btn-edit-category" data-id="@item.Id" data-name="@item.Name" data-bs-toggle="modal" data-bs-target="#editCategoryModal">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form action="/Admin/Categories/Delete" method="post" onsubmit="return confirm('Are you sure remove the category?');" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                    @* <tr>
                    <td>
                    <input type="checkbox" class="form-check-input">
                    </td>
                    <td>Ethereum</td>
                    <td>ethereum</td>
                    <td>News and updates about Ethereum</td>
                    <td>98</td>
                    <td><span class="badge bg-success">Active</span></td>
                    <td>
                    <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger">
                    <i class="fas fa-trash"></i>
                    </button>
                    </div>
                    </td>
                    </tr>
                    <tr>
                    <td>
                    <input type="checkbox" class="form-check-input">
                    </td>
                    <td>DeFi</td>
                    <td>defi</td>
                    <td>Decentralized Finance news and updates</td>
                    <td>75</td>
                    <td><span class="badge bg-success">Active</span></td>
                    <td>
                    <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger">
                    <i class="fas fa-trash"></i>
                    </button>
                    </div>
                    </td>
                    </tr> *@
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form action="/Admin/Categories/CreateCategory" method="post">
                    @Html.AntiForgeryToken()  <!-- Burası çok önemli -->

                    <div class="text-danger">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <input name="CreateCategory.Name" type="text" class="form-control" id="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea name="CreateCategory.Description" class="form-control" id="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="Status" class="form-label">Status</label>
                        <select name="CreateCategory.Status" class="form-select" id="status" required>
                            <option value="">Select Status</option>
                            @foreach (var item in Model.CreateCategory.Statuses)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                            @* <option value="inactive">Inactive</option> *@
                        </select>
                        <p>@(Model?.CreateCategory?.Statuses?.Count ?? 0) status yüklendi.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Category</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>


<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Admin/Categories/Edit" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="modal-header">
                    <h5 class="modal-title">Edit Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <!-- Kategori ID (gizli input) -->
                    <input type="hidden" name="Id" value="@Model.EditCategory.Id" />

                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input name="Name" type="text" class="form-control" value="@Model.EditCategory.Name" />
                    </div>

                   @*  <div class="mb-3">
                        <label class="form-label">Slug</label>
                        <input name="Slug" type="text" class="form-control" value="@Model.EditCategory.Slug" />
                    </div> *@

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea name="Description" class="form-control" rows="3">@Model.EditCategory.Description</textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select name="Status" class="form-select">
                            @foreach (var s in Model.EditCategory.Statuses)
                            {
                                <option value="@s.Value" @(s.Value == ((int)Model.EditCategory.Status).ToString() ? "selected" : "")>@s.Text</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Category</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Düzenle butonları için seçici (kategori için değiştirildi)
        const editButtons = document.querySelectorAll('.btn-edit-category');

        editButtons.forEach(button => {
            button.addEventListener('click', function () {
                // Butondan kategori Id'sini al
                const categoryId = this.getAttribute('data-id');

                // Kategori bilgilerini JSON olarak sunucudan çek (API endpoint)
                fetch(`/Admin/Categories/Edit?id=${categoryId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Modal içindeki inputları doldur
                        document.querySelector('#editCategoryModal input[name="Id"]').value = data.id;
                        document.querySelector('#editCategoryModal input[name="Name"]').value = data.name;
                        //document.querySelector('#editCategoryModal input[name="Slug"]').value = data.slug;
                        document.querySelector('#editCategoryModal textarea[name="Description"]').value = data.description;

                        // Status dropdown'u temizle ve doldur
                        const statusSelect = document.querySelector('#editCategoryModal select[name="Status"]');
                        statusSelect.innerHTML = ''; // önce temizle
                        data.statuses.forEach(status => {
                            const option = document.createElement('option');
                            option.value = status.value;
                            option.text = status.text;
                            if (status.value === data.status.toString()) {
                                option.selected = true;
                            }
                            statusSelect.appendChild(option);
                        });
                    });
            });
        });
    });
</script>
