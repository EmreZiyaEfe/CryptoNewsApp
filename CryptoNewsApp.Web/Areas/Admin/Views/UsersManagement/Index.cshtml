@model CryptoNewsApp.Web.Areas.Admin.Models.Vms.UserIndexVm


@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Main Content -->
@{
    var newUserEmail = TempData["NewUserEmail"] as string;
    var newUserPassword = TempData["NewUserPassword"] as string;
}

@if (!string.IsNullOrEmpty(newUserEmail) && !string.IsNullOrEmpty(newUserPassword))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Yeni Kullanıcı Oluşturuldu!</strong><br />
        <b>Email:</b> @newUserEmail<br />
        <b>Geçici Şifre:</b> <code>@newUserPassword</code><br />
        Lütfen kullanıcıya bu bilgileri ilettiğinizden emin olun.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Kapat"></button>
    </div>
}


<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">User Management</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="fas fa-user-plus me-2"></i>Add New User
        </button>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form class="row g-3">
            <div class="col-md-3">
                <label for="role" class="form-label">Role</label>
                <select class="form-select" name="AddUser.Role">
                    <option value="">All Roles</option>
                    @foreach (var item in Model.AddUser.Roles)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="status" class="form-label">Status</label>
                <select class="form-select" name="AddUser.Status">
                    <option value="">All Status</option>
                    @foreach (var item in Model.AddUser.Statuses)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }

                </select>
            </div>
            <div class="col-md-4">
                <label for="search" class="form-label">Search</label>
                <input type="text" class="form-control" id="search" placeholder="Search by name or email">
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">Filter</button>
            </div>
        </form>
    </div>
</div>

<!-- Users Table -->
<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" class="form-check-input" id="selectAll">
                        </th>
                        <th>User</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Joined</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Users)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="form-check-input">
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://via.placeholder.com/32" alt="User" class="rounded-circle me-2">
                                    <div>
                                        <div class="fw-bold">@item.FullName</div>
                                        @* <small class="text-muted">johndoe</small> *@
                                    </div>
                                </div>
                            </td>
                            <td>@item.Email</td>
                            <td><span class="badge bg-primary">@item.Role</span></td>
                            <td>@item.JoinDate</td>
                            <td><span class="badge bg-success">@item.Status</span></td>
                            <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-sm btn-outline-primary btn-edit-user" data-bs-toggle="modal" data-bs-target="#editUserModal" data-id="@item.Id" data-fullName="@item.FullName" data-email="@item.Email" data-role="@item.Role" data-status="@((int)item.Status)">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form action="/Admin/UsersManagement/Delete" method="post" onsubmit="return confirm('Kullanıcıyı silmek istediğinize emin misiniz?');" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                    @* <tr>
                    <td>
                    <input type="checkbox" class="form-check-input">
                    </td>
                    <td>
                    <div class="d-flex align-items-center">
                    <img src="https://via.placeholder.com/32" alt="User" class="rounded-circle me-2">
                    <div>
                    <div class="fw-bold">Jane Smith</div>
                    <small class="text-muted">janesmith</small>
                    </div>
                    </div>
                    </td>
                    <td>jane.smith@example.com</td>
                    <td><span class="badge bg-info">Editor</span></td>
                    <td>2024-02-01</td>
                    <td><span class="badge bg-success">Active</span></td>
                    <td>
                    <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger">
                    <i class="fas fa-trash"></i>
                    </button>
                    </div>
                    </td>
                    </tr>
                    <tr>
                    <td>
                    <input type="checkbox" class="form-check-input">
                    </td>
                    <td>
                    <div class="d-flex align-items-center">
                    <img src="https://via.placeholder.com/32" alt="User" class="rounded-circle me-2">
                    <div>
                    <div class="fw-bold">Mike Johnson</div>
                    <small class="text-muted">mikejohnson</small>
                    </div>
                    </div>
                    </td>
                    <td>mike.johnson@example.com</td>
                    <td><span class="badge bg-secondary">Author</span></td>
                    <td>2024-02-15</td>
                    <td><span class="badge bg-warning">Inactive</span></td>
                    <td>
                    <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger">
                    <i class="fas fa-trash"></i>
                    </button>
                    </div>
                    </td>
                    </tr> *@
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="/Admin/UsersManagement/CreateUser" method="post">
                @Html.AntiForgeryToken()  <!-- Burası çok önemli -->

                <div class="text-danger">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="FullName" class="form-label">Full Name</label>
                        <input name="AddUser.FullName" type="text" class="form-control" id="fullName" required>
                    </div>
                    @* <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="username" required>
                    </div> *@
                    <div class="mb-3">
                        <label for="Email" class="form-label">Email</label>
                        <input name="AddUser.Email" type="email" class="form-control" id="email" required>
                    </div>
                    @* <div class="mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" type="password" class="form-control" id="password" required>
                    </div> *@
                    <div class="mb-3">
                        <label for="Role" class="form-label">Role</label>
                        <select class="form-select" name="AddUser.Role" required>
                            <option value="">-- Select Role --</option>
                            @foreach (var item in Model.AddUser.Roles)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                            @*
                            @* <option value="author">Author</option>
                            <option value="editor">Editor</option>
                            <option value="admin">Admin</option> *@
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="Status" class="form-label">Status</label>
                        <select class="form-select" name="AddUser.Status" required>
                            <option value="">-- Select Status --</option>
                            @foreach (var item in Model.AddUser.Statuses)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                            @*  <option value="inactive">Inactive</option>
                            <option value="suspended">Suspended</option> *@
                        </select>
                        <p>@(Model?.AddUser?.Statuses?.Count ?? 0) status yüklendi.</p>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save User</button>
                    </div>
                </div>

                

            </form>
        </div>
    </div>
</div>


<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Admin/UsersManagement/Edit" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" value="@Model.EditUser.Id" />
                    <div class="mb-3">
                        <label class="form-label">Full Name</label>
                        <input name="FullName" type="text" class="form-control" value="@Model.EditUser.FullName" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input name="Email" type="email" class="form-control" value="@Model.EditUser.Email" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Role</label>
                        <select name="Role" class="form-select">
                            @foreach (var role in Model.EditUser.Roles)
                            {
                                <option value="@role.Value" @(role.Value == Model.EditUser.Role ? "selected" : "")>@role.Text</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select name="Status" class="form-select">
                            @foreach (var s in Model.EditUser.Statuses)
                            {
                                <option value="@s.Value" @(s.Value == ((int)Model.EditUser.Status).ToString() ? "selected" : "")>@s.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* <script>
    document.addEventListener('DOMContentLoaded', function () {
        const editButtons = document.querySelectorAll('.btn-edit-user');

        editButtons.forEach(button => {
            button.addEventListener('click', function () {
                const userId = this.getAttribute('data-id');
                const fullName = this.getAttribute('data-fullname');
                const email = this.getAttribute('data-email');
                const role = this.getAttribute('data-role');
                const status = this.getAttribute('data-status');

                //Modal inputları doldur
                document.querySelector('#editUserModal input[name="Id"]').value = userId;
                document.querySelector('#editUserModal input[name="FullName"]').value = fullName;
                document.querySelector('#editUserModal input[name="Email"]').value = email;

                //Role

                const roleSelect = document.querySelector('#editUserModal select[name = "Role"]');

                if (roleSelect) roleSelect.value = role;

                //Status
                const statusSelect = document.querySelector('#editUserModal select[name = "Status"]');

                if (statusSelect) statusSelect.value = status;
            });
        });
    });
</script> *@
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const editButtons = document.querySelectorAll('.btn-edit-user');

        editButtons.forEach(button => {
            button.addEventListener('click', function () {
                const userId = this.getAttribute('data-id');

                fetch(`/Admin/UsersManagement/Edit?id=${userId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Modal inputlarını doldur
                        document.querySelector('#editUserModal input[name="Id"]').value = data.id;
                        document.querySelector('#editUserModal input[name="FullName"]').value = data.fullName;
                        document.querySelector('#editUserModal input[name="Email"]').value = data.email;

                        // ROLLERİ DOLDUR
                        const roleSelect = document.querySelector('#editUserModal select[name="Role"]');
                        roleSelect.innerHTML = ''; // önce temizle
                        data.roles.forEach(role => {
                            const option = document.createElement('option');
                            option.value = role.value;
                            option.text = role.text;
                            if (role.value === data.role) {
                                option.selected = true;
                            }
                            roleSelect.appendChild(option);
                        });

                        // STATUS'LERİ DOLDUR
                        const statusSelect = document.querySelector('#editUserModal select[name="Status"]');
                        statusSelect.innerHTML = ''; // temizle
                        data.statuses.forEach(status => {
                            const option = document.createElement('option');
                            option.value = status.value;
                            option.text = status.text;
                            if (status.value === data.status.toString()) {
                                option.selected = true;
                            }
                            statusSelect.appendChild(option);
                        });
                    });
            });
        });
    });
</script>


@* <partial name="_ValidationScriptsPartial" />
<vc:validation-summary />
@Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@
